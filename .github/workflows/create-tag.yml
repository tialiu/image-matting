name: Create Tag

on:
  push:
    branches:
      - main

jobs:
  create_tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整的历史记录，包括所有标签

      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Extract version from pyproject.toml
        id: get_version
        run: |
          version=$(grep "^version" backend/pyproject.toml | sed -E 's/version = "(.*)"/\1/')
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Get the latest tag
        id: get_latest_tag
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          if [ "$latest_tag" = "v0.0.0" ]; then
            echo "No existing tags found. Using v0.0.0 as the starting point."
          else
            echo "Latest tag: $latest_tag"
          fi
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: Compare versions
        id: compare_versions
        run: |
          if [ "v${{ steps.get_version.outputs.version }}" = "${{ steps.get_latest_tag.outputs.latest_tag }}" ]; then
            echo "Version has not changed. Skipping tag creation."
            echo "created_tag=false" >> $GITHUB_OUTPUT
          else
            echo "created_tag=true" >> $GITHUB_OUTPUT
          fi

      - name: Create a new tag
        if: steps.compare_versions.outputs.created_tag == 'true'
        run: |
          git tag -a v${{ steps.get_version.outputs.version }} -m "Release v${{ steps.get_version.outputs.version }}"
          git push https://x-access-token:${{ secrets.PERSONAL_ACCESS_TOKEN }}@github.com/${{ github.repository }}.git v${{ steps.get_version.outputs.version }}
